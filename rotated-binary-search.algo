1:You are given an integer array nums sorted in ascending order, and an integer target.

Suppose that nums is rotated at some pivot unknown to you beforehand (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]).

If target is found in the array return its index, otherwise, return -1.
2:public int rotatedBinarySearch(int[] array, int target) {3:
	int left = 0;
	int right = array.length - 1;
	while(left <= right) {
		int mid = (left + right) >>> 1;
		int value = array[mid];
		if(value == target) {
			return mid;
		} else if(value < array[left]) {
			if(target > value && target <= array[right])
				left = mid + 1;
			else
				right = mid - 1;
		} else if(value >= array[left]) {
			if(target < value && target >= array[left])
				right = mid - 1;
			else
				left = mid + 1;
		}
	}
	return -1;
}
