1: Implement the methods union, find, and count of the UnionFind DS
2:
public class UnionFind {
	private int[] parent;
	private int[] size;
	private int count;
	
	public UnionFind(int n) {3:
		count = n;
		parent = new int[n];
		size = new int[n];
		for(int i = 0; i < n; i++) {
			parent[i] = i;
			size[i] = 1;
		}
	}
	public int find(int p) {
		while(parent[p] != p) {
			parent[p] = parent[parent[p]];
			p = parent[p];
		}
		return p;
	}
	public void union(int p, int q) {
		int rootP = find(p);
		int rootQ = find(q);
		if(rootP == rootQ) {
			return;
		}
		if(size[rootP] > size[rootQ]) {
			parent[rootQ] = rootP;
			size[rootP] += size[rootQ];
		} else {
			parent[rootP] = rootQ;
			size[rootQ] += size[rootP];
		}
		count--;
	}
	public int count() {
		return count;
	}
}
